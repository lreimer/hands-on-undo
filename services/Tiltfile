# -*- mode: Python -*-

# v1alpha1.extension_repo(name='default', url='https://github.com/tilt-dev/tilt-extensions')
# v1alpha1.extension(name='ngrok:config', repo_name='default', repo_path='ngrok')

# the parts service
local_resource('parts-service-build', './gradlew assemble', dir='parts-service',
   deps=['./parts-service/build.gradle', './parts-service/src/'], labels=['Parts'])

docker_build('lreimer/parts-service', './parts-service/', target='undo',
  dockerfile='parts-service/Dockerfile', only=['./build/', './libs/'])

k8s_yaml(['parts-service/k8s/deployment.yaml', 'parts-service/k8s/service.yaml'])
k8s_resource(workload='parts-service', port_forwards=[port_forward(18080, 8080, 'Parts API', '/api/parts')], labels=['Parts'])

# the vehicle service
local_resource('vehicle-service-build', './gradlew assemble', dir='vehicle-service',
  deps=['./vehicle-service/build.gradle', './vehicle-service/src/'], labels=['Vehicle'])

docker_build('lreimer/vehicle-service', './vehicle-service/', target='undo',
  dockerfile='vehicle-service/src/main/docker/Dockerfile.jvm', only=['./build/', './libs/'])

k8s_yaml(['vehicle-service/k8s/deployment.yaml', 'vehicle-service/k8s/service.yaml'])
k8s_resource(workload='vehicle-service', port_forwards=[port_forward(18081, 8081, 'Vehicle API', '/api/vehicles')], labels=['Vehicle'])
